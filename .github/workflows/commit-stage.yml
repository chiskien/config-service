#name of the workflow
name: Commit Stage

# the workflow is triggered when new code is published to the repository
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: chiskien/config-service
  VERSION: latest

jobs:
  build: #the job's unique identifier
    name: Build and Test # human-friendly name for the job
    runs-on: ubuntu-22.04 # the type of machine where the job should be run
    permissions: # the permissions granted to the job
      contents: read #Permission to check out the current Git repository
      security-events: write # Permission to submit security events to GitHub
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Build, unit tests, and integration tests
        run: mvn --batch-mode --update-snapshots package
      - name: Validate Kubernetes Manifest
        uses: stefanprodan/kube-tools@v1
        with:
          kubectl: 1.27.4
          kubeval: 0.16.1
          command: kubeval --strict -d kubernetes
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven
      - name: Build container image
        run: mvn spring-boot:build-image -D imageName=${{env.REGISTRY}}/${{env.IMAGE_NAME}}:${{env.VERSION}}
      - name: OCI Image vulnerability scannning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Log into container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
